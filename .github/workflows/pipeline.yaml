name: Backupr Pipeline
on: [push]
jobs:
  Verify-Build-Publish:
    runs-on: ubuntu-latest
    env:
      img_reg: 'ghcr.io'
      img_repo: 'eriknelson'
      img_name: 'backupr'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Init runtime
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry env info
          poetry install
      - name: Lint
        run: |
          poetry run scripts/lint.sh
      - name: Run all pytests with coverage report
        env:
          BACKUPR_INTEGRATION_TESTS: "true"
          B2_KEY_NAME: ${{ secrets.B2_KEY_NAME}}
          B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }}
          B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        run: |
          poetry run coverage run -m pytest
          poetry run coverage xml
      - name: Upload Coverage to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        uses: codecov/codecov-action@v2
      - name: Extract branch name and set as img_tag
        run: |
          echo "img_tag=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - name: Set fqin
        run: |
          echo "fqin=${{env.img_reg}}/${{env.img_repo}}/${{env.img_name}}:${{env.img_tag}}" >> $GITHUB_ENV
      - name: Build docker image
        run: |
          docker build -t ${{env.fqin}} -f docker/Dockerfile-slim .
      - name: Publish docker image
        run: |
          echo "${{secrets.GHCR_PAT}}" | docker login ghcr.io -u ${{github.actor}} --password-stdin
          docker push ${{env.fqin}}
